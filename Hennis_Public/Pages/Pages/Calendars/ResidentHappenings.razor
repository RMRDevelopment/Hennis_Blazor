@page "/ResidentHappenings"
@inject IPageRepository _pageRepository
@inject IHappeningsRepository _happeningsRepo
@inject IJSRuntime jsRuntime
@using Hennis_Models.Dto

<PageTitle>Hennis Care Centre of Bolivar and Dover</PageTitle>



@if (IsLoading)
{
    <div class="text-center">
        <img src="/images/loading.gif" />
    </div>
}
else
{




    <div class="container">
        <!-- Heading Section -->

        <Hennis_Public.Pages.Components._Heading Page="Page"></Hennis_Public.Pages.Components._Heading>
        <!-- End Heading Section -->

        <div class="offset-md-1 col-md-10">
            <div class="row">
                @foreach (var item in Items)
                {
                    <div class="px-4">
                        <div class="happenings-item ">
                            
                            <h3>@item.DisplayTitle</h3>
                            
                            <div class="content hideContent">
                            @((MarkupString)@item.Content)
                            </div>
                            @if (item.Content.Length > 200)
                            {
                                <div class="show-more mt-1">
                                <button href="#">Show More</button>
                                </div>
                            }
                            
                        </div>
                    </div>
                }
            </div>
        </div>


        <!-- section for text-->
        @*@if (Page.LayoutId == 1)
    {
    <Hennis_Public.Shared.Layouts._FullWidth Page="Page"></Hennis_Public.Shared.Layouts._FullWidth>
    }
    else
    {
    <Hennis_Public.Shared.Layouts._TwoColumn Page="Page"></Hennis_Public.Shared.Layouts._TwoColumn>
    }*@
        <!-- end text section-->
    </div>
}


@code {
    public int LayoutToUse { get; set; } = 1;

    public PageDto Page { get; set; } = new();

    public bool IsLoading { get; set; } = true;
    public List<HappeningsDto> Items { get; set; } = new List<HappeningsDto>();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            LoadPageContent();
        }
    }

    private async Task LoadPageContent()
    {
        IsLoading = true;
        StateHasChanged();
        Page = await _pageRepository.Get(22);
        Items = _happeningsRepo.GetResidentHappenings().GetAwaiter().GetResult().OrderBy(x => x.Date).ToList();
        jsRuntime.InvokeVoidAsync("InitShowMoreFunction");
        IsLoading = false;
        StateHasChanged();
    }
}

