@using Hennis_Models.Dto
@inject IPageTileRepository _repo;

@*<div class="container mt-5">*@
    <div class="row mb-5">

        

            @if (Page.ImageData.Length != 0)
            {
            <div class="px-4 title-container offset-md-1 col-md-10 height-200">
                
                <div style='background-image:url("@Page.ImageSourceData");background-position:center;background-size:cover;' class=" mb-3">
                    <div class="height-200 overlay d-flex align-items-center justify-content-center text-center">
                        <div class="p-4">
                            <h2 style="z-index:1; color:#fff;" class="h1">@Page?.Title</h2>
                            </div>
                        
                    </div>
                </div>
                </div>
            }
            else
            {
            <div class="px-4 title-container offset-md-1 col-md-10 height-75">
                <div class="d-flex align-items-center justify-content-center text-center p-4 mb-3 secondary-bg">
                    <h2 style="z-index:1; color:#fff;" class="h1">@Page?.Title</h2>
                </div>
                </div>
            }


            @*<div class="d-none d-sm-none d-md-block header-img-container col-md-2">
            <img class="img-responsive" src="@($"data:image/png;base64,{Convert.ToBase64String(Page?.ImageData)}")" />
            </div>*@

    </div>
@*</div>*@


@code {
    [Parameter]
    public PageDto Page { get; set; } = new();


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            StateHasChanged();
        }
    }
}
