@using Hennis_Common
@inject NavigationManager _navigationManager


@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }

    [Parameter]
    public string Role { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationState;
        if (!authState.User.Identity.IsAuthenticated)
        {
            var uri = new Uri(_navigationManager.Uri);
            _navigationManager.NavigateTo($"/identity/account/login?returnUrl={uri.LocalPath}", forceLoad: true);
        }
        else{
            if(!string.IsNullOrEmpty(Role) && !authState.User.IsInRole(Role)){
                // Not in required role
                if(!authState.User.IsInRole(SD.Role_SuperAdmin)){
                    _navigationManager.NavigateTo("/Unauthorized");
                }

            }
        }
    }
}
