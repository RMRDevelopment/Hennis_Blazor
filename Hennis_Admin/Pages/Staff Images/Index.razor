@page "/staffimages"
@using Hennis_Common

@inject IStaffImageRepository _repo;
@inject IFileRepository _fileRepo;
@inject IPageRepository _pageRepo;

<_AuthenticationRedirect></_AuthenticationRedirect>

<div class="row mt-4">
    <div class="col-6">
        Staff Images
    </div>


    <div class="col-12 py-2">

        @if (IsLoading)
        {
            <div class="text-center">
                <img src="/images/loading.gif" />
            </div>
        }
        else
        {


            <SfGrid DataSource="@Tiles" AllowSorting="true" AllowFiltering="true" AllowPaging="true" Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })">
                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                <GridEvents OnActionComplete="ActionComplete" TValue="StaffImageDto"></GridEvents>
                <GridEditSettings ShowDeleteConfirmDialog="true" AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="Syncfusion.Blazor.Grids.EditMode.Dialog">
                    <Template>
                        @{
                            var tile = (context as StaffImageDto);
                            <div>
                                <div class="form-row mb-4">
                                    <div class="form-group col-md-12">
                                        <label class="e-label-top">Id</label>
                                        <SfNumericTextBox ID="Id" @bind-Value="@(tile.Id)" ShowSpinButton="false" Enabled="false"></SfNumericTextBox>
                                    </div>

                                </div>
                                <div class="form-row mb-4">
                                    <div class="form-group col-md-12">
                                        <label class="e-label-top">Name</label>
                                        <SfTextBox ID="Name" @bind-Value="@(tile.Name)"></SfTextBox>
                                    </div>
                                </div>
                                <div class="form-row mb-4">
                                    <div class="form-group col-md-12">
                                        <label class="e-label-top">Title</label>
                                        <SfTextBox ID="Title" @bind-Value="@(tile.Title)"></SfTextBox>
                                    </div>
                                </div>
                                <div class="form-row mb-4">
                                    <div class="form-group col-md-12">
                                        <label class="e-label-top">Location</label>
                                        <SfTextBox ID="Name" @bind-Value="@(tile.Location)"></SfTextBox>
                                    </div>
                                </div>
                                <div class="form-row mb-4">
                                    <div class="form-group col-md-12">
                                        <label class="e-label-top">Bio</label>
                                        <SfTextBox Multiline="true" ID="Bio" @bind-Value="@(tile.Bio)"></SfTextBox>
                                    </div>
                                </div>


                                <div class="form-row mb-4">
                                    <div class="form-group col-md-12">
                                        <label class="e-label-top">Image</label>
                                        <SfUploader ID="UploadFiles" AllowedExtensions=".jpg,.png,.jpeg" ChunkSize="500000" AllowMultiple="false" AutoUpload="true">
                                            <UploaderAsyncSettings SaveUrl="api/Image/Save" RemoveUrl="api/Image/Remove" />
                                            <UploaderEvents Success="SuccessHandler" />
                                        </SfUploader>
                                    </div>

                                </div>

                                <div class="form-row mb-4">
                                    <div class="form-group col-md-12">
                                        <label class="e-label-top">Page</label>
                                        <SfDropDownList TItem="PageDto" TValue="string" Placeholder="Choose a Page" @bind-Value="@PageValue" DataSource="@Pages">
                                            <DropDownListEvents TItem="PageDto" TValue="string" ValueChange="OnPageChange" />
                                            <DropDownListFieldSettings Text="Name" Value="Id" />
                                        </SfDropDownList>
                                    </div>
                                </div>

                            </div>
                        }
                    </Template>
                </GridEditSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(StaffImageDto.Id) Width="50" HeaderText="ID" IsPrimaryKey="true" ValidationRules="@(new ValidationRules{ Required=true})"></GridColumn>
                    <GridColumn Field=@nameof(StaffImageDto.Name) HeaderText="Name"></GridColumn>
                    <GridColumn Field=@nameof(StaffImageDto.Title) HeaderText="Title" ValidationRules="@(new ValidationRules{ Required=true})" Width="300"></GridColumn>
                    <GridColumn Field=@nameof(StaffImageDto.Location) HeaderText="Location"></GridColumn>
                    <GridColumn Field=@nameof(StaffImageDto.ImageData) HeaderText="Image" TextAlign="TextAlign.Center">
                        <Template>
                            @{
                                var tile = (context as StaffImageDto);
                                if (tile != null && tile.ImageData != null)
                                {
                                    <div class="image">
                                        <img class="img-responsive" style="max-height:100px;" src="@($"data:image/png;base64,{Convert.ToBase64String(tile?.ImageData)}")" />
                                    </div>
                                }

                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field="@nameof(StaffImageDto.PageName)" HeaderText="Page"></GridColumn>
                </GridColumns>
            </SfGrid>
        }


    </div>
</div>

@code {
    private List<ToolbarItemModel> Tools = new List<ToolbarItemModel>()
    {
        new ToolbarItemModel() { Command = ToolbarCommand.Bold },
        new ToolbarItemModel() { Command = ToolbarCommand.Italic },
        new ToolbarItemModel() { Command = ToolbarCommand.Underline },
        new ToolbarItemModel() { Command = ToolbarCommand.StrikeThrough },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.FontColor },
        new ToolbarItemModel() { Command = ToolbarCommand.BackgroundColor },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.Formats },
        new ToolbarItemModel() { Command = ToolbarCommand.Alignments },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.OrderedList },
        new ToolbarItemModel() { Command = ToolbarCommand.UnorderedList },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.Outdent },
        new ToolbarItemModel() { Command = ToolbarCommand.Indent },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.CreateLink },
        new ToolbarItemModel() { Command = ToolbarCommand.Image },
        new ToolbarItemModel() { Command = ToolbarCommand.CreateTable },
        new ToolbarItemModel() { Command = ToolbarCommand.Separator },
        new ToolbarItemModel() { Command = ToolbarCommand.Undo },
        new ToolbarItemModel() { Command = ToolbarCommand.Redo }
    };
}
